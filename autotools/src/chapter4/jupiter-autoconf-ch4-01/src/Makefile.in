# @configure_input@

# package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@
distdir = $(tarname)-$(version)

# prefix-specific substitution variables
prefix      ?= @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@

# Tool-specific subtitution variables
CC         = @CC@
DEFS       = @DEFS@
LIBS       = @LIBS@
CFLAGS     = @CFLAGS@
CPPFLAGS   = @CPPFLAGS@
INSTALL    = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

# VPATH-specific substitution variables
srcdir		= @srcdir@
VPATH		= @srcdir@

CFLAGS ?= -g -O0

all:jupiter

jupiter:main.c
	$(CC) $(CPPFLAGS) $(CFLAGS) $(DEFS) -o $@ $(srcdir)/main.c $(LIBS)

clean:
	rm jupiter

check:all
	# grep没有匹配到，echo $?,返回的是1；退出
	./jupiter | grep "Hello from .*jupiter"
	@echo "*** ALL TESTS PASSED ***"

install:
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) -m 0755 jupiter $(DESTDIR)$(bindir)

uninstall:
	-rm $(DESTDIR)$(bindir)/jupiter


#  This rule allows make to regenerate the source makefile from its template if the template changes
Makefile:Makefile.in ../config.status
	cd .. && ./config.status $@

# Perhaps different command-line options were provided so that configure can now find libraries and header files it couldn't find previously
# update config.status by reconfiguring in the same conditions
config.status:../configure
	cd .. && ./config.status --recheck


.PHONY:all clean check install uninstall